#pragma once

#include <stdint.h>

// Contains an 8x8 font map for unicode points U+0000 - U+007F (basic latin)
const uint64_t font8x8_basic[128] = {
	0x0000000000000000ULL,   // U+0000 (nul)
	0x0000000000000000ULL,   // U+0001 (soh)
	0x0000000000000000ULL,   // U+0002 (stx)
	0x0000000000000000ULL,   // U+0003 (etx)
	0x0000000000000000ULL,   // U+0004 (eot)
	0x0000000000000000ULL,   // U+0005 (enq)
	0x0000000000000000ULL,   // U+0006 (ack)
	0x0000000000000000ULL,   // U+0007 (bel)
	0x0000000000000000ULL,   // U+0008 (bs)
	0x0000000000000000ULL,   // U+0009 (ht)
	0x0000000000000000ULL,   // U+000A (lf)
	0x0000000000000000ULL,   // U+000B (vt)
	0x0000000000000000ULL,   // U+000C (ff)
	0x0000000000000000ULL,   // U+000D (cr)
	0x0000000000000000ULL,   // U+000E (so)
	0x0000000000000000ULL,   // U+000F (si)
	0x0000000000000000ULL,   // U+0010 (dle)
	0x0000000000000000ULL,   // U+0011 (dc1)
	0x0000000000000000ULL,   // U+0012 (dc2)
	0x0000000000000000ULL,   // U+0013 (dc3)
	0x0000000000000000ULL,   // U+0014 (dc4)
	0x0000000000000000ULL,   // U+0015 (nak)
	0x0000000000000000ULL,   // U+0016 (syn)
	0x0000000000000000ULL,   // U+0017 (etb)
	0x0000000000000000ULL,   // U+0018 (can)
	0x0000000000000000ULL,   // U+0019 (eom)
	0x0000000000000000ULL,   // U+001A (sub)
	0x0000000000000000ULL,   // U+001B (esc)
	0x0000000000000000ULL,   // U+001C (fs)
	0x0000000000000000ULL,   // U+001D (gs)
	0x0000000000000000ULL,   // U+001E (rs)
	0x0000000000000000ULL,   // U+001F (us)
	0x0000000000000000ULL,   // U+0020 (space)
	0x00180018183C3C18ULL,   // U+0021 (!)
	0x0000000000003636ULL,   // U+0022 (")
	0x0036367F367F3636ULL,   // U+0023 (#)
	0x000C1F301E033E0CULL,   // U+0024 ($)
	0x0063660C18336300ULL,   // U+0025 (%)
	0x006E333B6E1C361CULL,   // U+0026 (&)
	0x0000000000030606ULL,   // U+0027 (')
	0x00180C0606060C18ULL,   // U+0028 (()
	0x00060C1818180C06ULL,   // U+0029 ())
	0x0000663CFF3C6600ULL,   // U+002A (*)
	0x00000C0C3F0C0C00ULL,   // U+002B (+)
	0x060C0C0000000000ULL,   // U+002C (,)
	0x000000003F000000ULL,   // U+002D (-)
	0x000C0C0000000000ULL,   // U+002E (.)
	0x000103060C183060ULL,   // U+002F (/)
	0x003E676F7B73633EULL,   // U+0030 (0)
	0x003F0C0C0C0C0E0CULL,   // U+0031 (1)
	0x003F33061C30331EULL,   // U+0032 (2)
	0x001E33301C30331EULL,   // U+0033 (3)
	0x0078307F33363C38ULL,   // U+0034 (4)
	0x001E3330301F033FULL,   // U+0035 (5)
	0x001E33331F03061CULL,   // U+0036 (6)
	0x000C0C0C1830333FULL,   // U+0037 (7)
	0x001E33331E33331EULL,   // U+0038 (8)
	0x000E18303E33331EULL,   // U+0039 (9)
	0x000C0C00000C0C00ULL,   // U+003A (:)
	0x060C0C00000C0C00ULL,   // U+003B (;)
	0x00180C0603060C18ULL,   // U+003C (<)
	0x00003F00003F0000ULL,   // U+003D (=)
	0x00060C1830180C06ULL,   // U+003E (>)
	0x000C000C1830331EULL,   // U+003F (?)
	0x001E037B7B7B633EULL,   // U+0040 (@)
	0x0033333F33331E0CULL,   // U+0041 (A)
	0x003F66663E66663FULL,   // U+0042 (B)
	0x003C66030303663CULL,   // U+0043 (C)
	0x001F36666666361FULL,   // U+0044 (D)
	0x007F46161E16467FULL,   // U+0045 (E)
	0x000F06161E16467FULL,   // U+0046 (F)
	0x007C66730303663CULL,   // U+0047 (G)
	0x003333333F333333ULL,   // U+0048 (H)
	0x001E0C0C0C0C0C1EULL,   // U+0049 (I)
	0x001E333330303078ULL,   // U+004A (J)
	0x006766361E366667ULL,   // U+004B (K)
	0x007F66460606060FULL,   // U+004C (L)
	0x0063636B7F7F7763ULL,   // U+004D (M)
	0x006363737B6F6763ULL,   // U+004E (N)
	0x001C36636363361CULL,   // U+004F (O)
	0x000F06063E66663FULL,   // U+0050 (P)
	0x00381E3B3333331EULL,   // U+0051 (Q)
	0x006766363E66663FULL,   // U+0052 (R)
	0x001E33380E07331EULL,   // U+0053 (S)
	0x001E0C0C0C0C2D3FULL,   // U+0054 (T)
	0x003F333333333333ULL,   // U+0055 (U)
	0x000C1E3333333333ULL,   // U+0056 (V)
	0x0063777F6B636363ULL,   // U+0057 (W)
	0x0063361C1C366363ULL,   // U+0058 (X)
	0x001E0C0C1E333333ULL,   // U+0059 (Y)
	0x007F664C1831637FULL,   // U+005A (Z)
	0x001E06060606061EULL,   // U+005B ([)
	0x00406030180C0603ULL,   // U+005C (\)
	0x001E18181818181EULL,   // U+005D (])
	0x0000000063361C08ULL,   // U+005E (^)
	0xFF00000000000000ULL,   // U+005F (_)
	0x0000000000180C0CULL,   // U+0060 (`)
	0x006E333E301E0000ULL,   // U+0061 (a)
	0x003B66663E060607ULL,   // U+0062 (b)
	0x001E3303331E0000ULL,   // U+0063 (c)
	0x006E33333e303038ULL,   // U+0064 (d)
	0x001E033f331E0000ULL,   // U+0065 (e)
	0x000F06060f06361CULL,   // U+0066 (f)
	0x1F303E33336E0000ULL,   // U+0067 (g)
	0x006766666E360607ULL,   // U+0068 (h)
	0x001E0C0C0C0E000CULL,   // U+0069 (i)
	0x1E33333030300030ULL,   // U+006A (j)
	0x0067361E36660607ULL,   // U+006B (k)
	0x001E0C0C0C0C0C0EULL,   // U+006C (l)
	0x00636B7F7F330000ULL,   // U+006D (m)
	0x00333333331F0000ULL,   // U+006E (n)
	0x001E3333331E0000ULL,   // U+006F (o)
	0x0F063E66663B0000ULL,   // U+0070 (p)
	0x78303E33336E0000ULL,   // U+0071 (q)
	0x000F06666E3B0000ULL,   // U+0072 (r)
	0x001F301E033E0000ULL,   // U+0073 (s)
	0x00182C0C0C3E0C08ULL,   // U+0074 (t)
	0x006E333333330000ULL,   // U+0075 (u)
	0x000C1E3333330000ULL,   // U+0076 (v)
	0x00367F7F6B630000ULL,   // U+0077 (w)
	0x0063361C36630000ULL,   // U+0078 (x)
	0x1F303E3333330000ULL,   // U+0079 (y)
	0x003F260C193F0000ULL,   // U+007A (z)
	0x00380C0C070C0C38ULL,   // U+007B ({)
	0x0018181800181818ULL,   // U+007C (|)
	0x00070C0C380C0C07ULL,   // U+007D (})
	0x0000000000003B6EULL,   // U+007E (~)
	0x0000000000000000ULL    // U+007F
};